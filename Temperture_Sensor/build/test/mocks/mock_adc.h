/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCK_ADC_H
#define _MOCK_ADC_H

#include "unity.h"
#include "adc.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void mock_adc_Init(void);
void mock_adc_Destroy(void);
void mock_adc_Verify(void);




#define adc_init_Ignore() adc_init_CMockIgnore()
void adc_init_CMockIgnore(void);
#define adc_init_StopIgnore() adc_init_CMockStopIgnore()
void adc_init_CMockStopIgnore(void);
#define adc_init_Expect(config) adc_init_CMockExpect(__LINE__, config)
void adc_init_CMockExpect(UNITY_LINE_TYPE cmock_line, adc_config_t* config);
typedef void (* CMOCK_adc_init_CALLBACK)(adc_config_t* config, int cmock_num_calls);
void adc_init_AddCallback(CMOCK_adc_init_CALLBACK Callback);
void adc_init_Stub(CMOCK_adc_init_CALLBACK Callback);
#define adc_init_StubWithCallback adc_init_Stub
#define adc_init_ReturnThruPtr_config(config) adc_init_CMockReturnMemThruPtr_config(__LINE__, config, sizeof(adc_config_t))
#define adc_init_ReturnArrayThruPtr_config(config, cmock_len) adc_init_CMockReturnMemThruPtr_config(__LINE__, config, cmock_len * sizeof(*config))
#define adc_init_ReturnMemThruPtr_config(config, cmock_size) adc_init_CMockReturnMemThruPtr_config(__LINE__, config, cmock_size)
void adc_init_CMockReturnMemThruPtr_config(UNITY_LINE_TYPE cmock_line, adc_config_t* config, size_t cmock_size);
#define adc_init_IgnoreArg_config() adc_init_CMockIgnoreArg_config(__LINE__)
void adc_init_CMockIgnoreArg_config(UNITY_LINE_TYPE cmock_line);
#define adc_read_IgnoreAndReturn(cmock_retval) adc_read_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void adc_read_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define adc_read_StopIgnore() adc_read_CMockStopIgnore()
void adc_read_CMockStopIgnore(void);
#define adc_read_ExpectAndReturn(cmock_retval) adc_read_CMockExpectAndReturn(__LINE__, cmock_retval)
void adc_read_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
typedef int (* CMOCK_adc_read_CALLBACK)(int cmock_num_calls);
void adc_read_AddCallback(CMOCK_adc_read_CALLBACK Callback);
void adc_read_Stub(CMOCK_adc_read_CALLBACK Callback);
#define adc_read_StubWithCallback adc_read_Stub

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif
